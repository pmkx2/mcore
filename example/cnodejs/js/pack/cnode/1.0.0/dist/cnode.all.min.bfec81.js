(function(){define("cnode/api",["jquery"],function(t){"use strict";var e,n;return e="https://cnodejs.org/api/v1",n={topics:function(n){return null==n&&(n={}),n=t.extend({mdrender:!1,limit:10},n),t.get(e+"/topics",n)},topic:function(n){return t.get(e+"/topic/"+n,{mdrender:!1})}}})}).call(this),function(){define("cnode",["jquery","mcore","tag"],function(t,e){"use strict";var n;return n=!1,function(r,o){var i;return i=new e.App(t(r)),i.route("/topic/:id","cnode/topic").route("*","cnode/index"),i.on("runView",function(){return n===!1?(n=!0,t(o).remove()):void 0}),i.run()}})}.call(this),function(){define("cnode/formatters",["mcore","moment","markdown-it"],function(t,e,n){"use strict";var r,o;return r=t.Template,o=new n({html:!1,xhtmlOut:!1,breaks:!0,langPrefix:"language-",linkify:!0,typographer:!1}),r.formatters("dateFormat",function(t,n){return null==n&&(n="YYYY-MM-DD"),e(t).format(n)}),r.formatters("fromNow",function(t){return e(t).fromNow()}),r.formatters("markdown",function(t){return o.render(t)})})}.call(this),function(){define("cnode/topic",["jquery","cnode/view","mcore-attr/scroller","cnode/formatters"],function(t,e){"use strict";return e.subclass({constructor:e.prototype.constructor,run:function(t){return this.render("cnode/topic.html",{topic:this.api.topic(t)})}})})}.call(this),function(){define("cnode/view",["jquery","mcore","cnode/api"],function(t,e,n){"use strict";return e.View.subclass({constructor:e.View.prototype.constructor,beforeInit:function(){return this.api=n}})})}.call(this),function(){define("cnode/index",["jquery","cnode/view","mcore-attr/scroller","cnode/formatters"],function(t,e){"use strict";return e.subclass({constructor:e.prototype.constructor,run:function(t){return this.page=1,this.render("cnode/index.html",{topics:this.getTopics(this.page),loadPageDone:!0})},getTopics:function(t){return null==t&&(t=1),this.cache("indexTopics"+t,this.api.topics({page:t}),{storage:"memory"})},watch:function(){return this.$el.on("scrollend",function(t){return function(){var e;if(t.get("loadPageDone")!==!1)return t.set("loadPageDone",!1),e=t.clone(t.get("topics")),t.api.topics({page:t.page+1}).done(function(n){return t.page++,n.data.map(function(t){return e.data.push(t)}),t.set("topics",e)}).always(function(){return t.set("loadPageDone",!0)})}}(this))}})})}.call(this);