// Generated by CoffeeScript 1.9.3

/**
 * class base
 * @module mcore/class
 * @author vfasky <vfasky@gmail.com>
 */

(function() {
  var slice = [].slice;

  define('mcore/class', ['jquery'], function($) {
    "use strict";
    var Ctor, EventClass, createProto, extend;
    Ctor = function() {};
    if (Object.__proto__) {
      createProto = function(proto) {
        return {
          __proto__: proto
        };
      };
    } else {
      createProto = function(proto) {
        Ctor.prototype = proto;
        return new Ctor();
      };
    }
    EventClass = function() {
      this._events = {};
    };
    EventClass.prototype.on = function(event, callback) {
      if (false === this._events.hasOwnProperty(event)) {
        this._events[event] = [];
      }
      return this._events[event].push(callback);
    };
    EventClass.prototype.emit = function() {
      var args, event;
      args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      if (args.length === 0) {
        return;
      }
      if (false === this._events.hasOwnProperty(args[0])) {
        return;
      }
      event = args[0];
      args.splice(0, 1);
      this._events[event].map(function(callback) {
        return callback.apply(null, args);
      });
    };
    EventClass.prototype.off = function(event) {
      if (false === this._events.hasOwnProperty(event)) {
        return;
      }
      this._events[event] = [];
    };
    extend = function(Soure, proto) {
      var ExtendClass, keys;
      if (proto == null) {
        proto = {};
      }
      if (false === proto.hasOwnProperty('initialize')) {
        proto.initialize = function() {};
      }
      ExtendClass = function() {
        Soure.apply(this);
        this.initialize.apply(this, arguments);
      };
      ExtendClass.prototype = createProto(Soure.prototype);
      keys = Object.keys(proto);
      keys.forEach(function(k) {
        return ExtendClass.prototype[k] = proto[k];
      });
      ExtendClass.extend = function(proto) {
        return extend(ExtendClass, proto);
      };
      return ExtendClass;
    };
    return extend(EventClass);
  });

}).call(this);
