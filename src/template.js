// Generated by CoffeeScript 1.10.0

/**
 * 基于 virtual dom 的模板引擎
 * @date 2016-01-09 16:39:56
 * @author vfasky <vfasky@gmail.com>
 * @link http://vfasky.com
 */
'use strict';
var EventEmitter, Template, diff, patch, ref, requestAnimationFrame,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

EventEmitter = require('./eventEmitter');

requestAnimationFrame = require('./requestAnimationFrame');

ref = require('./virtualDom'), diff = ref.diff, patch = ref.patch;

require('./objectWatch');

Template = (function(superClass) {
  extend(Template, superClass);

  function Template() {
    this._status = 0;
    this._queueId = null;
    this.refs = null;
    this.virtualDomDefine = null;
    this.virtualDom = null;
    this.scope = {};
    this.init();
  }

  Template.prototype.watchScope = function() {
    if (this._initWatchObject || this._status === 0) {
      return;
    }
    this._initWatchObject = true;
    return Object.prototype.watch(this, 'scope', (function(_this) {
      return function(id, oldval, newval) {
        _this.email('changeScope', oldval, newval);
        return _this.renderQueue(_this);
      };
    })(this));
  };

  Template.prototype.destroy = function() {
    if (this._initWatchObject) {
      Object.prototype.unwatch(this, 'scope');
    }
    if (this.refs && this.refs.parentNode && this.refs.parentNode.removeChild) {
      return this.refs.parentNode.removeChild(this.refs);
    }
  };

  Template.prototype.init = function() {};

  Template.prototype._render = function(data, done) {
    var patches, virtualDom;
    virtualDom = this.virtualDomDefine(data.scope);
    if (this.virtualDom === null) {
      this.virtualDom = virtualDom;
      this.refs = this.virtualDom.render();
    } else {
      patches = diff(this.virtualDom, virtualDom);
      patch(this.refs, patches);
    }
    this._status = 2;
    this.emit('rendered');
    if (done) {
      return done();
    }
  };

  Template.prototype.renderQueue = function(data, doneOrAsync) {
    requestAnimationFrame.clear(this._queueId);
    if (true === doneOrAsync) {
      return this._render(data);
    } else {
      this._status = 1;
      return this._queueId = requestAnimationFrame((function(_this) {
        return function() {
          return _this._render(data, doneOrAsync);
        };
      })(this));
    }
  };

  Template.prototype.render = function(virtualDomDefine, scope, doneOrAsync) {
    this.virtualDomDefine = virtualDomDefine;
    this.scope = scope != null ? scope : {};
    if (doneOrAsync == null) {
      doneOrAsync = function() {};
    }
    this._status = 1;
    this.emit('beforeRender');
    this.renderQueue(this, doneOrAsync);
    return requestAnimationFrame((function(_this) {
      return function() {
        return _this.watchScope();
      };
    })(this));
  };

  return Template;

})(EventEmitter);

module.exports = Template;
