// Generated by CoffeeScript 1.10.0

/**
 * 
 * @date 2016-01-11 20:41:14
 * @author vfasky <vfasky@gmail.com>
 * @link http://vfasky.com
 */
'use strict';
var _isNumberReg;

_isNumberReg = /^-{0,1}\d*\.{0,1}\d+$/;

exports.isNumber = function(x) {
  return _isNumberReg.test(x);
};

exports.isArray = function(x) {
  if (Array.isArray) {
    return Array.isArray(x);
  }
  return Object.prototype.toString.call(x) === '[object Array]';
};

exports.isObject = function(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};

exports.isString = function(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};

exports.isFunction = function(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};

exports.isPlainObject = function(x) {
  var hasIsPropertyOfMethod, hasOwnConstructor, key, lastKey;
  if (!x || Object.prototype.toString.call(x) !== '[object Object]' || x.nodeType || x.setInterval) {
    return false;
  }
  hasOwnConstructor = Object.hasOwnProperty.call(x, 'constructor');
  hasIsPropertyOfMethod = Object.hasOwnProperty.call(x.constructor.prototype, 'isPrototypeOf');
  if (x.constructor && !hasOwnConstructor && !hasIsPropertyOfMethod) {
    return false;
  }
  for (key in x) {
    lastKey = key;
  }
  return typeof lastKey === 'undefined' || Object.hasOwnProperty.call(x, lastKey);
};

exports.extend = function() {
  var clone, copy, deep, i, j, length, name, options, ref, ref1, src, start, target;
  target = arguments[0] || {};
  length = arguments.length;
  deep = false;
  start = 1;
  if (typeof target === 'boolean') {
    deep = target;
    target = arguments[1] || {};
    start = 2;
  }
  if (typeof target !== 'object' && typeof target !== 'function') {
    target = {};
  }
  for (i = j = ref = start, ref1 = length; ref <= ref1 ? j < ref1 : j > ref1; i = ref <= ref1 ? ++j : --j) {
    if ((options = arguments[i]) !== null) {
      for (name in options) {
        src = target[name];
        copy = options[name];
        if (target === copy) {
          continue;
        }
        if (deep && copy && (exports.isPlainObject(copy) || exports.isArray(copy))) {
          clone = {};
          if (src && (exports.isPlainObject(src) || exports.isArray(src))) {
            clone = exports.isArray(copy) && [] || {};
          }
          target[name] = exports.extend(deep, clone, copy);
        } else if (typeof copy !== 'undefined') {
          target[name] = copy;
        }
      }
    }
  }
  return target;
};

(function() {
  if (window.requestAnimationFrame) {
    exports.nextTick = function(fun) {
      return window.requestAnimationFrame(function() {
        return fun();
      });
    };
    return exports.nextTick.clear = function(id) {
      if (id) {
        return window.cancelAnimationFrame(id);
      }
    };
  } else {
    exports.nextTick = function(fun) {
      return setTimeout(fun, 0);
    };
    return exports.nextTick.clear = function(id) {
      if (id) {
        return clearTimeout(id);
      }
    };
  }
})();
