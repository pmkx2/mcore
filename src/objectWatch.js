// Generated by CoffeeScript 1.10.0

/**
 * object.watch polyfill
 * @date 2016-01-09 17:22:29
 * @author vfasky <vfasky@gmail.com>
 * @link http://vfasky.com
 */
'use strict';
if (!Object.prototype.watch) {
  Object.defineProperty(Object.prototype, 'watch', {
    enumerable: false,
    configurable: true,
    writable: false,
    value: function(prop, handler) {
      var getter, newval, oldval, setter;
      oldval = this[prop];
      newval = oldval;
      getter = function() {
        return newval;
      };
      setter = function(val) {
        oldval = newval;
        return newval = handler.callback(this, prop, oldval, val);
      };
      if (delete this[prop]) {
        return Object.defineProperty(this, prop, {
          get: getter,
          set: setter,
          enumerable: true,
          configurable: true
        });
      }
    }
  });
}

if (!Object.prototype.unwatch) {
  Object.defineProperty(Object.prototype, 'unwatch', {
    enumerable: false,
    configurable: true,
    writable: false,
    value: function(prop) {
      var val;
      val = this[prop];
      delete this[prop];
      return this[prop] = val;
    }
  });
}
