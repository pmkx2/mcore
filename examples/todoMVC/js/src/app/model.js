// Generated by CoffeeScript 1.10.0

/**
 * 
 * @date 2016-01-30 10:15:30
 * @author vfasky <vfasky@gmail.com>
 * @link http://vfasky.com
 */
'use strict';
var $, _data, _storage_key, storage;

$ = require('jquery');

_storage_key = '__todo_mvc_data_';

storage = window.localStorage;

if (!storage || !storage.setItem) {
  _data = {};
  storage = {
    setItem: function(key, val) {
      return _data[key] = val;
    },
    getItem: function(key) {
      return _data[key];
    }
  };
}

exports.list = function(selected) {
  var data, error, error1;
  if (selected == null) {
    selected = 'all';
  }
  data = [];
  try {
    data = JSON.parse(storage.getItem(_storage_key) || '[]');
  } catch (error1) {
    error = error1;
  }
  if (selected === 'all') {
    return data;
  }
  return $.grep(data, function(v) {
    return v.visibility === selected;
  });
};

exports.write = function(data) {
  return storage.setItem(_storage_key, JSON.stringify(data));
};

exports.update = function(todo) {
  var data, isMatch;
  data = exports.list();
  isMatch = false;
  $.each(data, function(k, v) {
    if (String(v.id) === String(todo.id)) {
      v.title = todo.title;
      v.visibility = todo.visibility;
      v.isEdit = todo.isEdit;
      isMatch = true;
      return false;
    }
  });
  if (isMatch) {
    return exports.write(data);
  }
};

exports.add = function(todo) {
  var data;
  todo.id = (new Date).getTime();
  data = exports.list();
  data.push(todo);
  exports.write(data);
  return todo.id;
};

exports.get = function(id) {
  var data, todo;
  data = exports.list();
  todo = null;
  $.each(data, function(k, v) {
    if (String(v.id) === String(id)) {
      todo = v;
      return false;
    }
  });
  return todo;
};

exports.remove = function(id) {
  var data;
  data = exports.list();
  return $.each(data, function(k, v) {
    if (String(v.id) === String(id)) {
      data.splice(k, 1);
      exports.write(data);
      return false;
    }
  });
};
