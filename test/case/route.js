// Generated by CoffeeScript 1.9.3

/**
 * 测试路由
 * @module case/route
 * @author vfasky <vfasky@gmail.com>
 */

(function() {
  define('case/route', ['describe', 'it', 'mcore/route', 'assert'], function(describe, it, route, assert) {
    "use strict";
    return describe('route test pathToRegexp', function() {
      it('/index/:id/:v', function() {
        var data, i, k, key, ref, ref1, reg, v;
        key = [];
        reg = route.pathToRegexp('/index/:id/:v', key);
        assert.equal(null, reg.exec('/index/12'));
        ref = reg.exec('/index/12/13');
        data = {};
        for (v = i = 1, ref1 = ref.length; 1 <= ref1 ? i < ref1 : i > ref1; v = 1 <= ref1 ? ++i : --i) {
          k = key[v - 1];
          if (k) {
            data[k.name] = Number(ref[v]);
          }
        }
        return assert.equal(JSON.stringify(data), JSON.stringify({
          id: 12,
          v: 13
        }));
      });
      it('/index/:id?/:v', function() {
        var key, reg;
        key = [];
        reg = route.pathToRegexp('/index/:id?/:v', key);
        return assert.equal(true, Array.isArray(reg.exec('/index//12')));
      });
      return it('/show/*', function() {
        var key, reg;
        key = [];
        reg = route.pathToRegexp('/show/*', key);
        return assert.equal(2, reg.exec('/show/sf/sdf/').length);
      });
    });
  });

}).call(this);
